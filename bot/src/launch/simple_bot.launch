<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <!-- ARGS -->
  <arg name="gui" default="true"/>
  <arg name="rvizconfig" default="$(find bot)/src/rviz_config/simple_bot.rviz" />

  <!-- PARAMS -->
  <param name="use_gui" value="$(arg gui)"/>
  <!--param name="robot_description" command="$(find xacro)/xacro '$(find bot)/src/model/bot.xacro'"/-->
  <param name="robot_description" command="$(find xacro)/xacro '$(find bot)/src/model/bot.xacro'"/>

   <param name="test_area_description" textfile="$(find bot)/src/cartographer_config/Test_area/model.sdf" />

  <!-- ADDITIONAL FILES -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="worlds/empty_world.world"/> <!-- Note: the world_name is with respect to GAZEBO_RESOURCE_PATH environmental variable -->
    <arg name="paused" value="true"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="recording" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <!-- ADDITIONAL NODES -->
  <node name="bot_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
   args="-urdf -param robot_description -model bot -z 0.5" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />

  <node name="test_area_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
    args="-sdf -param test_area_description -model Test_area"  />

  <!-- we don't need the following line as long as gazebo plugin publishes the states of wheels /-->
  <!--node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/-->
  
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)"  required="true" />

  <!-- node for twist commands from keyboard, runs in the same terminal -->
  <node name="teleop" pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py"/>

  <!-- NAVIGATION NODE -->

    <!-- Odometry frame is fixed with map -->
  <!--node pkg="tf" type="static_transform_publisher" name="map_odom_broadcaster"
    args="0 0 0 0 0 0 map odom 100"/-->

    <!-- SLAM: Gmapping, Cartographer, Hector, Karto, Frontier_exploration, RTAB-Map -->
  <include file="$(find bot)/src/launch/slam_bot.launch"/>
    <!-- Move_base node -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find bot)/src/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find bot)/src/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find bot)/src/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find bot)/src/config/global_costmap_params.yaml" command="load" />    
    <rosparam file="$(find bot)/src/config/move_base_params.yaml" command="load" />
    <rosparam file="$(find bot)/src/config/base_global_planner_params.yaml" command="load"/>
    <rosparam file="$(find bot)/src/config/base_local_planner_params.yaml" command="load" />
  </node>
 <!-- TODO unneccessary to deal with these problems: Could not transform the global plan to the frame of the controller
 Ð¸  Extrapolation Error: Lookup would require extrapolation into the future.  -->
</launch>
